## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia

sudo: required

notifications:
  email: false
git:
  depth: false

env:
  global:
    - JULIA_DEBUG=CUDAapi

matrix: 
  allow_failures:
    - julia: nightly
    - arch: x86
    - arch: arm64

  include:
  # linux builds
    - env: CUDA=8.0
      os: linux
      dist: xenial
      julia: 1.6
    - env: CUDA=9.0
      os: linux
      dist: xenialz
      julia: 1.6
    - env: CUDA=9.1
      os: linux
      dist: xenial
      julia: 1.6
    - env: CUDA=9.2
      os: linux
      dist: xenial
      julia: 1.6
    - env: CUDA=10.0
      os: linux
      dist: xenial
      julia: 1.6
    - os: linux
      julia: 1.6
    - os: linux
      julia: nightly
    - os: linux
      arch: x86
      julia: 1.6
    - os: linux
      arch: arm64
      julia: 1.6

  # osx builds
    - os: osx
      julia: 1.6
  # windows builds
    - os: windows
      julia: 1.6

install:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; 
    then 
      if [[ $CUDA != "" ]];
      then
        chmod +x .travis.linux;
        ./.travis.linux; 
      fi;
    fi

## uncomment and modify the following lines to manually install system packages
#addons:
#  apt: # apt-get for linux
#    packages:
#    - gfortran
#before_script: # homebrew for mac
#  - if [ $TRAVIS_OS_NAME = osx ]; then brew install gcc; fi

## uncomment the following lines to override the default test script
script:
 - if [[ $CUDA != "" ]];
   then 
    export PATH=/usr/local/cuda-$CUDA/bin:$PATH;
   fi
 - julia --project -e 'using Pkg; 
                       Pkg.build(); 
                       Pkg.test(coverage=true)'

after_success:
  - julia -e 'using Pkg;
              import FCANN;
              cd(joinpath(dirname(pathof(FCANN)), ".."));
              Pkg.add("Coverage");
              include("process_src_coverage.jl");
              Codecov.submit(process_folder2());
              Coveralls.submit(process_folder2())'